```{r}
library(dplyr)
library(survival)
library(survminer)

# 假设 ALL_SILU_data 已经被加载到环境中
ALL_SILU_data_clean <- ALL_SILU_data %>%
  filter(!is.na(HLA_FG) & !is.na(HLA_I_group) & !is.na(CD45_density_group) & !is.na(DSS_Status) & !is.na(DSS_Time))


# 将DSS_Time列中的"NA"字符串转换为真正的NA值，然后将列转换为数值型
ALL_SILU_data_clean <- ALL_SILU_data_clean %>%
  mutate(DSS_Time = as.numeric(replace(DSS_Time, DSS_Time == "NA", NA)))

# 确保转换没有引入NA值，如果引入了，再次进行过滤
ALL_SILU_data_clean <- ALL_SILU_data_clean %>%
  filter(!is.na(DSS_Time))

# 将生存时间从天数转换为月数
ALL_SILU_data_clean <- ALL_SILU_data_clean %>%
  mutate(DSS_Time_Months = DSS_Time / 30.44)

# 创建一个新的组合变量
ALL_SILU_data_grouped <- ALL_SILU_data_clean %>%
  mutate(Group = factor(paste(HLA_FG, HLA_I_group,CD45_density_group, sep = "_")))


# 创建生存对象，使用转换后的月数
surv_object <- Surv(time = ALL_SILU_data_grouped$DSS_Time_Months, event = ALL_SILU_data_grouped$DSS_Status == "Dead")

# 使用新的分组变量进行Kaplan-Meier生存分析
km_fit <- survfit(surv_object ~ Group, data = ALL_SILU_data_grouped)

# 绘制生存曲线
ggsurvplot(km_fit,
           data = ALL_SILU_data_grouped,
           pval = TRUE,
           conf.int = FALSE, # 不显示95%置信区间
           risk.table = TRUE,
           palette = c("#4F81BD", "#F4B084", "#1B9E77", "#C0504D", "#9ABA59", "#7570B3", "#E0777D", "#8DD3C7"),
           legend.title = "Group",
           legend.labs = levels(ALL_SILU_data_grouped$Group), # 自动从分组变量中获取图例标签
           xlab = "Time in months",
           ylab = "DSS probability",
           risk.table.fontsize = 3,
           risk.table.height = 0.1,
           xlim = c(0, 90), # 限制X轴范围只展示到90个月
           break.x.by = 30)


```
