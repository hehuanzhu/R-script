rm(list = ls())
library(dplyr)
library(survival)
library(survminer)
library(readxl)
ALL_SILU_data <- read_excel("ALL_SILU_data.xlsx")

# 仅删除HLA_I_Manual, DSS_Status, 和DSS_Time列中含有空值的行
# 将DSS_Time列中的"NA"字符串转换为真正的NA值，然后将列转换为数值型
ALL_SILU_data_clean <- ALL_SILU_data %>%
  mutate(DSS_Time = as.numeric(replace(DSS_Time, DSS_Time == "NA", NA)))

# 将生存时间从天数转换为月数
ALL_SILU_data_clean <- ALL_SILU_data_clean %>%
  mutate(DSS_Time_Months = DSS_Time / 30.44)

ALL_SILU_data_grouped <- ALL_SILU_data_clean %>%
  mutate(Group = factor(case_when(
    HLA_I_group == "High" ~ "High",
    HLA_I_group == "Low" ~ "Low",
    TRUE ~ "Other"  # 捕捉意外值
  ), levels = c("High", "Low", "Other"))) %>%
  filter(Group != "Other")  # 删除“Other”组

# 移除Group列为"Other"的行，如果你的数据确实只包含p, hp, hw, w，这步可能是多余的
ALL_SILU_data_grouped <- filter(ALL_SILU_data_grouped, Group != "Other")

# 创建生存对象，使用转换后的月数
surv_object <- Surv(time = ALL_SILU_data_grouped$DSS_Time_Months, event = ALL_SILU_data_grouped$DSS_Status == "Dead")

# 使用新的分组变量进行Kaplan-Meier生存分析
km_fit <- survfit(surv_object ~ Group, data = ALL_SILU_data_grouped)

surv_plot <- ggsurvplot(
  km_fit,
  data = ALL_SILU_data_grouped,
  pval = TRUE,
  conf.int = FALSE,
  risk.table = TRUE,
  palette = c("#FC4E07", "#2E9FDF"),
  legend.title = "Group",
  legend.labs = c("High", "Low"),
  xlab = "Time in months",
  ylab = "Survival probability",
  xlim = c(0, 90),
  break.x.by = 30,
  risk.table.fontsize = 4,
  risk.table.height = 0.25,  # 不调整
  font.main = c(16, "bold"),
  font.x = c(14),
  font.y = c(14),
  font.tickslab = 12,
  font.legend = c(12),  # 调小 legend 字体
  legend = "top",       # legend 放上方，更节省宽度
  ggtheme = theme_bw(base_size = 14) +
    theme(
      panel.background = element_blank(),
      panel.grid.major = element_blank(),
      panel.grid.minor = element_blank(),
      plot.margin = margin(10, 10, 10, 10)  # 收紧周围留白
    )
)

# 导出为稍窄一些的 PDF（使主图更紧凑）
pdf("HLA_I_DSS.pdf", width = 4.5, height = 6, onefile = FALSE)
print(surv_plot)
dev.off()


